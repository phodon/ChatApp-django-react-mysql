{"ast":null,"code":"var _jsxFileName = \"D:\\\\chatapp\\\\frontend\\\\chatapp\\\\src\\\\components\\\\MessageInput.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { FaPaperPlane, FaSmile } from 'react-icons/fa';\nimport Picker from \"emoji-picker-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageInput({\n  message,\n  handleMessageChange,\n  handleSendMessage,\n  handleMessageKeyPress\n}) {\n  _s();\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\n  const handleOpenEmoji = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n  };\n  const togglePicker = () => {\n    setIsPickerOpen(!isPickerOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-message clearfix\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group-prepend\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"input-group-text\",\n        onClick: handleSendMessage,\n        children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: togglePicker,\n        children: \"\\uD83D\\uDE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), \" \", isPickerOpen && /*#__PURE__*/_jsxDEV(Picker, {\n        onEmojiClick: handleOpenEmoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 26\n      }, this), \" \", chosenEmoji &&\n      /*#__PURE__*/\n      // Hi·ªÉn th·ªã bi·ªÉu t∆∞·ª£ng ƒë√£ ch·ªçn\n      _jsxDEV(\"div\", {\n        children: [\"Your Emoji:\", /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            width: '15px'\n          },\n          src: chosenEmoji.emoji,\n          alt: \"emoji\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group mb-0\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        maxLength: 100000,\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Enter text here...\",\n        value: message,\n        onChange: handleMessageChange,\n        onKeyPress: handleMessageKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageInput, \"AGYUMjk5bMlP9pbxIz4i3fXpa9M=\");\n_c = MessageInput;\nexport default MessageInput;\nvar _c;\n$RefreshReg$(_c, \"MessageInput\");","map":{"version":3,"names":["React","FaPaperPlane","FaSmile","Picker","jsxDEV","_jsxDEV","MessageInput","message","handleMessageChange","handleSendMessage","handleMessageKeyPress","_s","chosenEmoji","setChosenEmoji","useState","isPickerOpen","setIsPickerOpen","handleOpenEmoji","event","emojiObject","togglePicker","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onEmojiClick","style","width","src","emoji","alt","maxLength","type","placeholder","value","onChange","onKeyPress","_c","$RefreshReg$"],"sources":["D:/chatapp/frontend/chatapp/src/components/MessageInput.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport { FaPaperPlane, FaSmile } from 'react-icons/fa';\r\nimport Picker from \"emoji-picker-react\";\r\n\r\n\r\nfunction MessageInput({ message, handleMessageChange, handleSendMessage, handleMessageKeyPress }) {\r\n  const [chosenEmoji, setChosenEmoji] = useState(null);\r\n  const [isPickerOpen, setIsPickerOpen] = useState(false);\r\n\r\n  const handleOpenEmoji = (event, emojiObject) => {\r\n    setChosenEmoji(emojiObject);\r\n  };\r\n\r\n  const togglePicker = () => {\r\n    setIsPickerOpen(!isPickerOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-message clearfix\">\r\n      <div className=\"input-group-prepend\">\r\n        <span className=\"input-group-text\" onClick={handleSendMessage}>\r\n          <FaPaperPlane />\r\n        </span>\r\n        <span onClick={togglePicker}>üòÄ</span> {/* Bi·ªÉu t∆∞·ª£ng emoji */}\r\n        {isPickerOpen && <Picker onEmojiClick={handleOpenEmoji} />} {/* Hi·ªÉn th·ªã Picker n·∫øu isPickerOpen l√† true */}\r\n        {chosenEmoji && ( // Hi·ªÉn th·ªã bi·ªÉu t∆∞·ª£ng ƒë√£ ch·ªçn\r\n          <div>\r\n            Your Emoji:\r\n            <img style={{ width: '15px' }} src={chosenEmoji.emoji} alt=\"emoji\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"input-group mb-0\">\r\n        <textarea\r\n          maxLength={100000}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Enter text here...\"\r\n          value={message}\r\n          onChange={handleMessageChange}\r\n          onKeyPress={handleMessageKeyPress}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageInput;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,YAAY,EAAEC,OAAO,QAAQ,gBAAgB;AACtD,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,SAASC,YAAYA,CAAC;EAAEC,OAAO;EAAEC,mBAAmB;EAAEC,iBAAiB;EAAEC;AAAsB,CAAC,EAAE;EAAAC,EAAA;EAChG,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMG,eAAe,GAAGA,CAACC,KAAK,EAAEC,WAAW,KAAK;IAC9CN,cAAc,CAACM,WAAW,CAAC;EAC7B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBJ,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;EAED,oBACEV,OAAA;IAAKgB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCjB,OAAA;MAAKgB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCjB,OAAA;QAAMgB,SAAS,EAAC,kBAAkB;QAACE,OAAO,EAAEd,iBAAkB;QAAAa,QAAA,eAC5DjB,OAAA,CAACJ,YAAY;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACPtB,OAAA;QAAMkB,OAAO,EAAEH,YAAa;QAAAE,QAAA,EAAC;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC,EACtCZ,YAAY,iBAAIV,OAAA,CAACF,MAAM;QAACyB,YAAY,EAAEX;MAAgB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAAC,GAAC,EAC3Df,WAAW;MAAA;MAAM;MAChBP,OAAA;QAAAiB,QAAA,GAAK,aAEH,eAAAjB,OAAA;UAAKwB,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAO,CAAE;UAACC,GAAG,EAAEnB,WAAW,CAACoB,KAAM;UAACC,GAAG,EAAC;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNtB,OAAA;MAAKgB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BjB,OAAA;QACE6B,SAAS,EAAE,MAAO;QAClBC,IAAI,EAAC,MAAM;QACXd,SAAS,EAAC,cAAc;QACxBe,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAE9B,OAAQ;QACf+B,QAAQ,EAAE9B,mBAAoB;QAC9B+B,UAAU,EAAE7B;MAAsB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChB,EAAA,CAxCQL,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AA0CrB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}